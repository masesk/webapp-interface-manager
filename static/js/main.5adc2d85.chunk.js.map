{"version":3,"sources":["redux/actions.js","redux/actionTypes.js","main/Window.js","main/Header.js","apps/AddWebApp.js","main/Settings.js","main/StaticWindow.js","constants.js","main/MinBar.js","apps/Sender.js","apps/Receiver.js","main/AppManager.js","serviceWorker.js","redux/reducers/windows.js","redux/reducers/settings.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["hideWindow","index","type","payload","toggleShowing","showing","updateIndex","viewid","ConnectedWindow","mapStateToProps","mapDispatchToProps","mergeProps","options","component","connect","forwardRef","React","connectAndForwardRef","minimizeWindow","title","width","height","url","children","appid","minimized","zIndex","frameRef","useRef","windowRef","topRef","ref","dimension","useState","loading","setLoading","pointerEvents","top","position","current","paddingBottom","paddingTop","paddingLeft","frameStyle","setFrameStyle","maximized","setMaximized","max","isInitialMount","savedimension","currentX","currentY","initialX","initialY","xOffset","yOffset","active","resizeDrag","initialRx","initialRy","useEffect","setTranslate","window","addEventListener","parent","innerWidth","innerHeight","f","R","transform","expandDragEnd","style","display","e","changeX","changeY","touches","clientX","clientY","stopPropagation","drag","xPos","yPos","preventDefault","cancelBubble","returnValue","className","onMouseMove","onMouseDown","onMouseUp","stroke","fill","strokeWidth","viewBox","size","color","xmlns","points","event","onClick","overflow","Spinner","animation","variant","key","onLoad","contentWindow","messageHandler","console","error","frameBorder","src","state","showWindow","windows","value","setValue","CustomMenu","labeledBy","aria-labelledby","FormControl","autoFocus","placeholder","onChange","target","Children","toArray","filter","child","props","toLowerCase","startsWith","Dropdown","onToggle","isOpened","as","ButtonGroup","Toggle","id","Menu","windowKey","Item","apps","Button","createWindow","single","deletable","editable","titleError","setTitleError","idError","setIdError","urlError","setUrlError","whError","setWhError","setSingle","setDeletable","setEditable","success","setSuccess","Form","Group","Label","Control","isInvalid","Feedback","Row","Col","required","Check","checked","label","isValidNumber","Number","NaN","deleteWindow","resetDefault","updateWindow","settings","editableRow","setEditableRow","renderButtons","marginRight","titleRef","widthRef","heightRef","urlRef","singletonRef","deletableRef","rel","setAppName","showingConfirm","setShowingConfirm","appName","showingConfirmReset","setShowingConfirmReset","handleClose","handleCloseConfirm","handleCloseConfirmReset","Modal","show","onHide","backdrop","keyboard","Header","closeButton","Container","marginLeft","md","offset","Title","Body","cellPadding","defaultValue","defaultChecked","Footer","win","fappid","view","BUILT_IN_APPS","addwebapp","sender","receiver","win_array","item","unminimizeWindow","hideWindowId","uminimizeUpdateIndex","Sender","count","setCount","undefined","publish","Receiver","listen","loadApps","channelName","data","Event","bubbles","cancelable","dispatchEvent","callback","Boolean","location","hostname","match","appView","opened","initialState","save","newstate","localStorage","setItem","JSON","stringify","load","getItem","parse","updateIn","path","val","obj","combineReducers","action","length","instance","fviewid","fzIndex","min","removed","sorted","lengthIndex","enhancers","compose","__REDUX_DEVTOOLS_EXTENSION__","createStore","rootReducer","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.5adc2d85.chunk.js","sourcesContent":["import {\r\n  SHOW_WINDOW,\r\n  CREATE_WINDOW,\r\n  HIDE_WINDOW,\r\n  TOGGLE_SETTINGS,\r\n  UPDATE_INDEX,\r\n  MINIMIZE_WINDOW,\r\n  UNMINIMIZE_WINDOW,\r\n  UNMINIMIZE_UPDATE_INDEX,\r\n  HIDE_WINDOW_ID,\r\n  DELETE_WINDOW,\r\n  LOAD_APPS,\r\n  RESET_DEFAULT,\r\n  UPDATE_WINDOW\r\n} from \"./actionTypes\";\r\n\r\n\r\nexport const hideWindow = index => ({\r\n  type: HIDE_WINDOW,\r\n  payload: { index }\r\n})\r\n\r\nexport const showWindow = appid => ({\r\n  type: SHOW_WINDOW,\r\n  payload: { appid }\r\n})\r\n\r\nexport const createWindow = (appid, title, width, height, url, single, deletable, editable) => ({\r\n  type: CREATE_WINDOW,\r\n  payload: { appid, title, width, height, url, single, deletable, editable }\r\n})\r\n\r\nexport const updateWindow = (appid, title, width, height, url, single, deletable, editable) => ({\r\n  type: UPDATE_WINDOW,\r\n  payload: { appid, title, width, height, url, single, deletable, editable }\r\n})\r\n\r\n\r\nexport const toggleShowing = (showing) => ({\r\n  type: TOGGLE_SETTINGS,\r\n  payload: { showing }\r\n})\r\n\r\n\r\nexport const updateIndex = (viewid) => ({\r\n  type: UPDATE_INDEX,\r\n  payload: { viewid }\r\n})\r\n\r\nexport const minimizeWindow = (index) => ({\r\n  type: MINIMIZE_WINDOW,\r\n  payload: { index }\r\n})\r\n\r\nexport const unminimizeWindow = (index) => ({\r\n  type: UNMINIMIZE_WINDOW,\r\n  payload: { index }\r\n})\r\n\r\nexport const uminimizeUpdateIndex = (viewid) => ({\r\n  type: UNMINIMIZE_UPDATE_INDEX,\r\n  payload: { viewid }\r\n})\r\n\r\nexport const hideWindowId = (viewid) => ({\r\n  type: HIDE_WINDOW_ID,\r\n  payload: { viewid }\r\n})\r\n\r\n\r\nexport const deleteWindow = (appid) => ({\r\n  type: DELETE_WINDOW,\r\n  payload: { appid }\r\n})\r\n\r\nexport const loadApps = () => ({\r\n  type: LOAD_APPS\r\n})\r\n\r\nexport const resetDefault = () => ({\r\n  type: RESET_DEFAULT\r\n})\r\n\r\n\r\n\r\n\r\n\r\n","export const SHOW_WINDOW = \"SHOW_WINDOW\"\r\nexport const CREATE_WINDOW = \"CREATE_WINDOW\"\r\nexport const HIDE_WINDOW = \"HIDE_WINDOW\"\r\nexport const TOGGLE_SETTINGS = \"TOGGLE_SETTINGS\"\r\nexport const UPDATE_INDEX = \"UPDATE_INDEX\"\r\nexport const MINIMIZE_WINDOW = \"MINIMIZE_WINDOW\"\r\nexport const UNMINIMIZE_WINDOW = \"UNMINIMIZE_WINDOW\"\r\nexport const UNMINIMIZE_UPDATE_INDEX = \"UNMINIMIZE_UPDATE_INDEX\"\r\nexport const HIDE_WINDOW_ID = \"HIDE_WINDOW_ID\"\r\nexport const DELETE_WINDOW = \"DELETE_WINDOW\"\r\nexport const LOAD_APPS = \"LOAD_APPS\"\r\nexport const RESET_DEFAULT = \"RESET_DEFAULT\"\r\nexport const UPDATE_WINDOW = \"UPDATE_WINDOW\"","import React, { useState, useRef, useEffect } from 'react';\r\nimport '../css/App.css';\r\nimport { MdClose, MdCropSquare, MdRemove, MdFilterNone} from 'react-icons/md';\r\nimport { Spinner } from 'react-bootstrap'\r\nimport '../css/boostrap.min.css'\r\nimport * as R from 'ramda'\r\nimport { hideWindow, updateIndex, minimizeWindow } from \"../redux/actions\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Window({ title, width, height, url, appid, children, minimized, updateIndex, hideWindow, minimizeWindow, zIndex, index, viewid }) {\r\n  const frameRef = useRef()\r\n  const windowRef = useRef()\r\n  const topRef = useRef()\r\n  const ref = useRef()\r\n  const dimension = useRef({ width, height })\r\n  const [loading, setLoading] = useState(true)\r\n  const [frameStyle, setFrameStyle] = useState(\r\n    {\r\n      pointerEvents: \"none\",\r\n      top: 0,\r\n      position: \"absolute\", zIndex: zIndex, width: `${dimension.current.width + 600}px`, paddingBottom: `${dimension.current.height + 500}px`, paddingTop: `300px`, paddingLeft: \"300px\"\r\n    }\r\n  )\r\n  const [maximized, setMaximized] = useState(false)\r\n\r\n  const max = useRef(false)\r\n\r\n  const isInitialMount = useRef(true);\r\n  const savedimension = useRef({})\r\n  const currentX = useRef()\r\n  const currentY = useRef()\r\n  const initialX = useRef()\r\n  const initialY = useRef()\r\n  const xOffset = useRef(0)\r\n  const yOffset = useRef(0)\r\n  const active = useRef(false)\r\n  const resizeDrag = useRef(false)\r\n\r\n  const initialRx = useRef(0)\r\n  const initialRy = useRef(0)\r\n\r\n  useEffect(() => {\r\n    dimension.current = { width, height }\r\n    setTranslate(-300, -250)\r\n    xOffset.current = -300\r\n    yOffset.current = -250\r\n    currentX.current = -300\r\n    currentY.current = -250\r\n    window.addEventListener('resize', () => {\r\n      if (max.current) {\r\n        dimension.current.width = window.parent.innerWidth - 7\r\n        dimension.current.height = window.parent.innerHeight - 137\r\n        setFrameStyle(f => R.merge(f, {\r\n\r\n          transform: \"none\",\r\n          top: 50,\r\n          width: \"100%\",\r\n          height: \"calc(100% - 30px)\",\r\n          paddingBottom: 0,\r\n          paddingTop: 0,\r\n          paddingLeft: 0\r\n\r\n        }))\r\n      }\r\n\r\n    });\r\n\r\n    window.addEventListener('mouseup', expandDragEnd);\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (isInitialMount.current) {\r\n      isInitialMount.current = false;\r\n    } else {\r\n      if (maximized) {\r\n\r\n        setFrameStyle(f => R.merge(f, {\r\n\r\n          transform: \"none\",\r\n          top: 50,\r\n          width: \"100%\",\r\n          height: \"calc(100% - 30px)\",\r\n          paddingBottom: 0,\r\n          paddingTop: 0,\r\n          paddingLeft: 0\r\n\r\n        }))\r\n\r\n        windowRef.current.style.width = \"100%\"\r\n        topRef.current.style.width = \"100%\"\r\n        setTranslate(0, 0)\r\n\r\n      }\r\n      else {\r\n        setTranslate(currentX.current, currentY.current)\r\n        setFrameStyle(f => R.merge(f, {\r\n          top: 0,\r\n          height: `${dimension.current.height + 600}px`,\r\n          position: \"absolute\",\r\n          width: `${dimension.current.width + 600}px`,\r\n          paddingBottom: `${dimension.current.height + 500}px`,\r\n          paddingTop: `300px`,\r\n          paddingLeft: \"300px\",\r\n\r\n\r\n        }))\r\n\r\n      }\r\n    }\r\n  }, [maximized])\r\n\r\n  useEffect(() => {\r\n    setFrameStyle(f => R.merge(f, {\r\n      zIndex: zIndex\r\n    }))\r\n  }, [zIndex])\r\n\r\n  useEffect(() => {\r\n    if (minimized) {\r\n      setFrameStyle(f => R.merge(f, {\r\n        display: \"none\"\r\n      }))\r\n    }\r\n    else {\r\n      setFrameStyle(f => R.merge(f, {\r\n        display: \"block\"\r\n      }))\r\n    }\r\n  }, [minimized])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const dragStart = (e) => {\r\n    active.current = true;\r\n    e.stopPropagation()\r\n    if (e.type === \"touchstart\") {\r\n      initialX.current = e.touches[0].clientX - xOffset.current;\r\n      initialY.current = e.touches[0].clientY - yOffset.current;\r\n    } else {\r\n      initialX.current = e.clientX - xOffset.current;\r\n      initialY.current = e.clientY - yOffset.current;\r\n    }\r\n    updateIndex(viewid)\r\n    setFrameStyle(\r\n      R.assoc(\"pointerEvents\", \"auto\", frameStyle)\r\n    )\r\n\r\n  }\r\n\r\n  const expandDragStart = (e) => {\r\n    if (e.type === \"touchmove\") {\r\n      initialRx.current = e.touches[0].clientX;\r\n      initialRy.current = e.touches[0].clientY;\r\n    } else {\r\n      initialRx.current = e.clientX;\r\n      initialRy.current = e.clientY;\r\n    }\r\n    resizeDrag.current = true\r\n    stopPropagation(e)\r\n    setFrameStyle(R.clone(frameStyle))\r\n    updateIndex(viewid)\r\n    \r\n  }\r\n\r\n  const expandDragEnd = (e) => {\r\n    if (!resizeDrag.current) {\r\n      return\r\n    }\r\n    let changeX;\r\n    let changeY;\r\n    if (e.type === \"touchmove\") {\r\n      changeX = e.touches[0].clientX - initialRx.current\r\n      changeY = e.touches[0].clientY - initialRy.current\r\n    } else {\r\n      changeX = e.clientX - initialRx.current;\r\n      changeY = e.clientY - initialRy.current;\r\n    }\r\n    if (R.isNil(changeX) || R.isNil(changeY)) {\r\n      return\r\n    }\r\n    stopPropagation(e)\r\n    resizeDrag.current = false\r\n    dimension.current.width = dimension.current.width + changeX\r\n    dimension.current.height = dimension.current.height + changeY\r\n    setFrameStyle(f => R.merge(f, {\r\n      width: `${dimension.current.width + 600}px`, paddingBottom: `${dimension.current.height + 500}px`, height: `${dimension.current.height}px`\r\n    }))\r\n  }\r\n\r\n\r\n  const dragEnd = (e) => {\r\n    if(!active.current){\r\n      return\r\n    }\r\n    initialX.current = currentX.current;\r\n    initialY.current = currentY.current;\r\n\r\n    active.current = false;\r\n    stopPropagation(e)\r\n    setFrameStyle(\r\n      R.assoc(\"pointerEvents\", \"none\", frameStyle)\r\n    )\r\n  }\r\n\r\n  const drag = (e) => {\r\n    if (active.current && !maximized) {\r\n      stopPropagation(e)\r\n\r\n      if (e.type === \"touchmove\") {\r\n        currentX.current = e.touches[0].clientX - initialX.current;\r\n        currentY.current = e.touches[0].clientY - initialY.current;\r\n      } else {\r\n        currentX.current = e.clientX - initialX.current;\r\n        currentY.current = e.clientY - initialY.current;\r\n      }\r\n\r\n      xOffset.current = currentX.current;\r\n      yOffset.current = currentY.current;\r\n\r\n      setTranslate(currentX.current, currentY.current);\r\n    }\r\n  }\r\n\r\n  const setTranslate = (xPos, yPos) => {\r\n    ref.current.style.transform = \"translate3d(\" + xPos + \"px, \" + yPos + \"px, 0)\";\r\n\r\n  }\r\n\r\n\r\n\r\n  const stopPropagation = (e) => {\r\n    if (e.stopPropagation) e.stopPropagation();\r\n    if (e.preventDefault) e.preventDefault();\r\n    e.cancelBubble = true;\r\n    e.returnValue = false;\r\n    return false;\r\n  }\r\n\r\n  let messageHandler = {}\r\n    messageHandler.publish = (channelName, data) => {\r\n      const win = R.pathEq([\"messageHandler\", \"publish\"], undefined, window) ? window.parent.window : window\r\n      const event = new Event(channelName, { bubbles: true, cancelable: false })\r\n      event.data = data\r\n      win.dispatchEvent(event)\r\n    }\r\n    messageHandler.listen =  (channelName, callback) => {\r\n      const win = R.pathEq([\"messageHandler\", \"publish\"], undefined, window) ? window.parent.window : window\r\n      win.addEventListener(channelName, (event) => {\r\n        callback(event.data)\r\n      }, false);\r\n    }\r\n  return (\r\n    <>\r\n      <div className=\"frame\" onMouseMove={drag} style={frameStyle} ref={ref}>\r\n        <div className=\"frame-border\" style={\r\n          R.compose(\r\n            R.assoc(\"resize\", \"both\"),\r\n            R.assoc(\"paddingTop\", 4),\r\n            R.assoc(\"paddingLeft\", 4),\r\n            R.assoc(\"paddingRight\", 4),\r\n            R.assoc(\"width\", (maximized ? dimension.current.width + 10 : null)),\r\n            R.assoc(\"top\", null),\r\n            R.assoc(\"height\", dimension.current.height + 53),\r\n            R.assoc(\"paddingBottom\", `${dimension.current.height + 5}px`),\r\n            R.assoc(\"pointerEvents\", (resizeDrag.current ? \"none\" : \"auto\"))\r\n          )(frameStyle)\r\n\r\n        }>\r\n          <div className=\"resize-arrow\" onMouseDown={expandDragStart} onMouseUp={expandDragEnd}>\r\n            <svg stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 24 24\" className=\"stroke\" size=\"35\" color=\"blue\" height=\"35\" width=\"35\" xmlns=\"http://www.w3.org/2000/svg\"><polyline fill=\"none\" stroke=\"#bfbfbf\" strokeWidth=\"2\" points=\"8 20 20 20 20 8\"></polyline></svg>\r\n          </div>\r\n          <div onMouseDown={dragStart} onMouseUp={dragEnd} ref={topRef} onMouseMove={drag} className=\"topbar\" style={{ width: `${R.propOr(width, \"width\", dimension.current)}px` }}>\r\n            <MdClose onMouseDown={(event) => { stopPropagation(event) }} onClick={() => { hideWindow(index) }} className=\"hover\" size={21} />\r\n            {maximized ? <MdFilterNone className=\"hover\" size={21} onClick={() => {\r\n              max.current = false\r\n              setMaximized(!maximized)\r\n              dimension.current.width = savedimension.current.width\r\n              dimension.current.height = savedimension.current.height\r\n\r\n            }\r\n            } />\r\n              : <MdCropSquare onClick={() => {\r\n                max.current = true\r\n                savedimension.current = { width: dimension.current.width, height: dimension.current.height }\r\n                setMaximized(!maximized)\r\n                dimension.current = { width: window.parent.innerWidth - 7, height: window.parent.innerHeight - 137 }\r\n\r\n              }} className=\"hover\" size={21} />\r\n\r\n            }\r\n            <MdRemove onClick={() => { minimizeWindow(index) }} className=\"hover\" size={21} />\r\n            <h5 className={\"float-right\"}>{title}</h5>\r\n\r\n          </div>\r\n          <div className=\"window\"  ref={windowRef} style={{ width: `${R.propOr(width, \"width\", dimension.current)}px`, height: `${R.propOr(height, \"height\", dimension.current)}px`, pointerEvents: (R.propEq(\"pointerEvents\", \"auto\", frameStyle) || resizeDrag.current ? \"none\" : \"auto\"), overflow: (R.isNil(children) ? \"hidden\" : \"auto\") }}>\r\n            {children && children}\r\n            \r\n            {loading && !children && <Spinner size=\"lg\" animation=\"border\" variant=\"secondary\" className=\"frameloading\" />}\r\n            {!children && <iframe key={viewid} ref={frameRef} onLoad={() => \r\n              {\r\n                setLoading(false);\r\n                try{\r\n                  frameRef.current.contentWindow.messageHandler = window.messageHandler\r\n                }catch(e){\r\n                  console.error(e)\r\n                }\r\n              }} frameBorder=\"0\" title={title} src={url} className={\"framestyle\"} height={`${R.propOr(height, \"height\", dimension.current)}px`} width={`${R.propOr(width, \"width\", dimension.current)}px`} />}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nconst connectAndForwardRef = (\r\n  mapStateToProps = null,\r\n  mapDispatchToProps = null,\r\n  mergeProps = null,\r\n  options = {},\r\n) => component => connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n  mergeProps,\r\n  {\r\n    ...options,\r\n    forwardRef: true,\r\n  },\r\n)(React.forwardRef(component));\r\n\r\nconst ConnectedWindow = connectAndForwardRef(null, { hideWindow, updateIndex, minimizeWindow })(Window)\r\n\r\nexport default ConnectedWindow;\r\n\r\n//export default React.forwardRef(Window);\r\n\r\n","import React, {useState} from 'react'\r\nimport { Dropdown, Button, FormControl, ButtonGroup } from 'react-bootstrap'\r\nimport * as R from 'ramda'\r\nimport { connect } from 'react-redux'\r\nimport { showWindow, toggleShowing } from '../redux/actions'\r\nimport {AiOutlineSetting, AiOutlineBars} from 'react-icons/ai'\r\n\r\n\r\n\r\nconst Header = ({windows, showWindow, toggleShowing}) => {\r\n  const [value, setValue] = useState('');\r\n  const CustomMenu = React.forwardRef(\r\n    ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n  \r\n      return (\r\n        <div\r\n          ref={ref}\r\n          style={style}\r\n          className={className}\r\n          aria-labelledby={labeledBy}\r\n        >\r\n          <FormControl\r\n            autoFocus\r\n            className=\"mx-3 my-2 w-auto\"\r\n            placeholder=\"Type to search...\"\r\n            onChange={(e) => setValue(e.target.value)}\r\n            value={value}\r\n          />\r\n          <ul className=\"list-unstyled\">\r\n            {React.Children.toArray(children).filter(\r\n              (child) =>\r\n                !value || child.props.children.toLowerCase().startsWith(value),\r\n            )}\r\n          </ul>\r\n        </div>\r\n      );\r\n    },\r\n  );\r\n    \r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header-apps-button\">\r\n\r\n                <Dropdown onToggle={(isOpened)=> {!isOpened && setValue('')}} as={ButtonGroup}>\r\n                    <Dropdown.Toggle  variant=\"secondary\" id=\"dropdown-basic\">\r\n                        <AiOutlineBars size={20}/>\r\n                </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu className=\"bg-dark\" as={CustomMenu}>\r\n                        {\r\n                        R.compose(\r\n                        R.map(([key, windowKey]) => {\r\n                            return   <Dropdown.Item className=\"text-white bg-dark\" key={windowKey} onClick={ () => showWindow(windowKey)}>{R.prop(\"title\", R.prop(windowKey, windows.apps))}</Dropdown.Item>\r\n                        }),\r\n                        R.toPairs,\r\n                        )(R.keys(windows.apps))\r\n                    }\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n\r\n            </div>\r\n            <div className=\"header-logo\">\r\n                <span>WAIM</span>\r\n            </div>\r\n            <div className=\"header-apps-button\">\r\n\r\n                <Button onClick={()=> toggleShowing(true)} variant=\"secondary\">\r\n\r\n                <AiOutlineSetting size={20}/>\r\n                </Button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return state\r\n  };\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { showWindow, toggleShowing }\r\n  )(Header)","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { createWindow, updateIndex } from \"../redux/actions\";\r\nimport * as R from 'ramda'\r\nconst AddWebApp = ({ createWindow }) => {\r\n  const title = useRef();\r\n  const url = useRef();\r\n  const id = useRef();\r\n  const width = useRef()\r\n  const height = useRef()\r\n  const [titleError, setTitleError] = useState(false)\r\n  const [idError, setIdError] = useState(false)\r\n  const [urlError, setUrlError] = useState(false)\r\n  const [whError, setWhError] = useState(false)\r\n  const [single, setSingle] = useState(false)\r\n  const [deletable, setDeletable] = useState(true)\r\n  const [editable, setEditable] = useState(true)\r\n  const [success, setSuccess] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setSuccess(false)\r\n  }, [single, deletable])\r\n  return (\r\n    <Form className=\"p-5\">\r\n      <Form.Group>\r\n        <Form.Label>appName ID</Form.Label>\r\n        <Form.Control ref={id} placeholder=\"App ID\" isInvalid={idError} onChange={e => {setIdError(false); setSuccess(false)}} />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          ID cannot be empty or a duplicate\r\n            </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Label>App Title</Form.Label>\r\n        <Form.Control ref={title} placeholder=\"App Title Name\" isInvalid={titleError} onChange={e => {setTitleError(false); setSuccess(false)}} />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          Title cannot be empty\r\n            </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Label>Width and Height</Form.Label>\r\n        <Form.Row>\r\n          <Col>\r\n            <Form.Control ref={width} onChange={e => {setWhError(false);  setSuccess(false)}} isInvalid={whError} placeholder=\"Width\" />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Width cannot be empty AND must be integers\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n          <Col>\r\n            <Form.Control ref={height} onChange={e => {setWhError(false) ; setSuccess(false)}} isInvalid={whError} placeholder=\"Height\" />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Height cannot be empty AND must be integers\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Row>\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>App URL</Form.Label>\r\n        <Form.Control ref={url} placeholder=\"App URL\" required isInvalid={urlError} onChange={e => {setUrlError(false); setSuccess(false)}} />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          URL cannot be empty\r\n            </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Label>Editable</Form.Label>\r\n        <Form.Check checked={editable} onChange={e => setEditable(!editable)} type=\"checkbox\" label=\"Allow app to be edited from the settings? This\r\n        cannot be undone and the options will not be editable.\" />\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Label>Single Instance</Form.Label>\r\n        <Form.Check checked={single} onChange={e => setSingle(!single)} type=\"checkbox\" label=\"Only a single instance of the application will run.\" />\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Label>Deletable</Form.Label>\r\n        <Form.Check checked={deletable} onChange={e => setDeletable(!deletable)} type=\"checkbox\" label=\"Allow app to be deleted?\" />\r\n      </Form.Group>\r\n\r\n      <Button variant=\"secondary\"\r\n        onClick={e => {\r\n          const isValidNumber = R.both(R.is(Number), R.complement(R.equals(NaN)));\r\n          let error = false\r\n          if (R.isEmpty(id.current.value)) {\r\n            setIdError(true)\r\n            error = true\r\n          }\r\n          if (R.isEmpty(title.current.value)) {\r\n            setTitleError(true)\r\n            error = true\r\n          }\r\n          if (R.isEmpty(url.current.value)) {\r\n            setUrlError(true)\r\n            error = true\r\n          }\r\n          if (R.isEmpty(width.current.value) || R.isEmpty(height.current.value) || !isValidNumber(Number(width.current.value)) || !isValidNumber(Number(height.current.value))) {\r\n            setWhError(true)\r\n            error = true\r\n          }\r\n          if (error) {\r\n            return\r\n          }\r\n          createWindow(id.current.value, title.current.value, Number(width.current.value), Number(height.current.value), url.current.value, single, deletable, editable)\r\n          updateIndex(id.current.value)\r\n          setSuccess(true)\r\n        }\r\n        }\r\n      >\r\n        Submit\r\n      </Button>\r\n      {success && <Form.Group><Form.Label className=\"text-success\">\r\n        App successfully created\r\n            </Form.Label></Form.Group>}\r\n\r\n    </Form >)\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { createWindow }\r\n)(AddWebApp)","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Button, Modal, Row, Col, Container, Form } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { toggleShowing, deleteWindow, resetDefault, updateWindow } from '../redux/actions'\r\nimport { AiOutlineDelete, AiOutlineEdit, AiOutlineCheck } from 'react-icons/ai'\r\nimport * as R from 'ramda'\r\n\r\n\r\n\r\n\r\n\r\nconst Settings = ({ windows, settings, toggleShowing, deleteWindow, resetDefault, updateWindow }) => {\r\n\r\n\r\n    const [editableRow, setEditableRow] = useState(-1)\r\n\r\n\r\n    const renderButtons = (appid, index) => {\r\n        return (\r\n            <>\r\n                {\r\n                     R.pathEq([\"apps\", appid, \"editable\"], true, windows) && \r\n                     <Button style={{ marginRight: 5 }} onClick={() => {\r\n                                if(!R.equals(appid, editableRow)){\r\n                                    setEditableRow(index)\r\n                                }\r\n                                else{ \r\n                                    updateWindow(appid, titleRef.current.value, Number(widthRef.current.value), \r\n                                        Number(heightRef.current.value), urlRef.current.value, singletonRef.current.checked,\r\n                                       deletableRef.current.checked, R.path([appid, \"editable\"], window))\r\n                                    setEditableRow(-1)\r\n                                }\r\n                            }} \r\n                        variant= {R.equals(appid, editableRow) ? \"success\" : \"secondary\"} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                         {R.equals(appid, editableRow) ? <AiOutlineCheck/> : <AiOutlineEdit size={20} />}\r\n                    </Button>\r\n                }\r\n                {\r\n                    R.pathEq([\"apps\", appid, \"deletable\"], true, windows) &&\r\n                    <Button onClick={() => setAppName(appid)} variant=\"secondary\" target=\"_blank\" rel=\"noopener noreferrer\"><AiOutlineDelete size={20} /></Button>\r\n                }\r\n            </>\r\n        );\r\n\r\n    }\r\n\r\n\r\n\r\n    const titleRef = useRef()\r\n    const widthRef = useRef()\r\n    const heightRef = useRef()\r\n    const urlRef = useRef()\r\n    const deletableRef = useRef()\r\n    const singletonRef = useRef()\r\n\r\n    const [showingConfirm, setShowingConfirm] = useState(false)\r\n    const [appName, setAppName] = useState(\"\")\r\n    const [showingConfirmReset, setShowingConfirmReset] = useState(false)\r\n    const handleClose = () => {\r\n        toggleShowing(false)\r\n        setEditableRow(-1)\r\n    }\r\n    const handleCloseConfirm = () => setShowingConfirm(false)\r\n    const handleCloseConfirmReset = () => setShowingConfirmReset(false)\r\n    const handleDelete = () => {\r\n        deleteWindow(R.path([\"apps\", appName, \"appid\"], windows))\r\n        setShowingConfirm(false)\r\n    }\r\n\r\n    const handleResetDefault = () => {\r\n        resetDefault()\r\n        setShowingConfirmReset(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!R.isEmpty(appName))\r\n            setShowingConfirm(true)\r\n    }, [appName])\r\n\r\n    useEffect(() => {\r\n        if (!showingConfirm)\r\n            setAppName(\"\")\r\n    }, [showingConfirm])\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <Modal\r\n                    show={settings.showing}\r\n                    onHide={handleClose}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    size=\"lg\"\r\n                    className=\"full-modal\"\r\n                    variant=\"secondary\"\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Container style={{ marginLeft: 0 }}>\r\n                            <Row>\r\n                                <Col md={{ offset: 0 }}>\r\n                                    <Modal.Title>Settings</Modal.Title>\r\n                                </Col>\r\n                                <Col md={{ offset: 3 }}>\r\n                                    <Button onClick={() => setShowingConfirmReset(true)} variant=\"secondary\">Reset to Default</Button>\r\n                                </Col>\r\n                            </Row></Container>\r\n\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <table cellPadding=\"10\" className=\"w-100\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th>App ID</th>\r\n                                    <th>Title</th>\r\n                                    <th>Width</th>\r\n                                    <th>Height</th>\r\n                                    <th>URL</th>\r\n                                    <th>Singleton</th>\r\n                                    <th>Deletable</th>\r\n                                    <th>Controls</th>\r\n                                </tr>\r\n                                {\r\n                                    R.compose(R.map(([index, window]) => {\r\n                                        return (\r\n                                            <tr key={index}>\r\n\r\n                                                <th>{R.prop(\"appid\", window)}</th>\r\n                                                {R.equals(index, editableRow) ? <th><Form.Control defaultValue={R.prop(\"title\", window)} ref={titleRef} placeholder=\"Title\" /></th> : <th>{R.prop(\"title\", window)}</th>}\r\n                                                {R.equals(index, editableRow) ? <th><Form.Control defaultValue={R.prop(\"width\", window)} ref={widthRef} placeholder=\"Width\" /></th> : <th>{R.prop(\"width\", window)}</th>}\r\n                                                {R.equals(index, editableRow) ? <th><Form.Control defaultValue={R.prop(\"height\", window)} ref={heightRef} placeholder=\"Height\" /></th> : <th>{R.prop(\"height\", window)}</th>}\r\n                                                {R.equals(index, editableRow) ? <th><Form.Control defaultValue={R.prop(\"url\", window)} ref={urlRef} placeholder=\"URL\" /></th> : <th>{R.prop(\"url\", window)}</th>}\r\n                                                {R.equals(index, editableRow) ? <th><Form.Check   defaultChecked={R.prop(\"single\", window)} ref={singletonRef} /></th>: <th>{R.toString(R.propOr(false, \"single\", window))}</th>}\r\n                                                {R.equals(index, editableRow) ? <th><Form.Check   defaultChecked={R.prop(\"deletable\", window)} ref={deletableRef} /></th>: <th>{R.toString(R.propOr(false, \"deletable\", window))}</th>}\r\n                                                <th>{renderButtons(R.prop(\"appid\", window), index)}</th>\r\n                                            </tr>)\r\n                                    }),\r\n                                        R.toPairs\r\n\r\n                                    )(windows.apps)\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Modal\r\n                    show={showingConfirm}\r\n                    onHide={handleCloseConfirm}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    size=\"lg\"\r\n                    variant=\"secondary\"\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Delete Confirmation</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        Are you sure you want to delete <b>{appName}</b>? All instances will be closed.\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleCloseConfirm}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"danger\" onClick={handleDelete}>Delete</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Modal\r\n                    show={showingConfirmReset}\r\n                    onHide={handleCloseConfirmReset}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    size=\"lg\"\r\n                    variant=\"secondary\"\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Reset to Default</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        Are you sure you want to reset to default? All apps added and/or removed will be reset. Any open instance will be closed.\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleCloseConfirmReset}>\r\n                            No\r\n                        </Button>\r\n                        <Button variant=\"danger\" onClick={handleResetDefault}>Reset</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return state\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { toggleShowing, deleteWindow, resetDefault, updateWindow }\r\n)(Settings)","import { connect } from 'react-redux'\r\nimport React from 'react';\r\nimport * as R from 'ramda'\r\nimport Window from './Window'\r\n\r\n\r\nconst StaticWindow = ({ windows, children, appid }, ref) => {\r\n\r\n  return (\r\n    <>\r\n    {\r\n        R.compose(\r\n        R.map(([index, win]) => {\r\n        \r\n          const fappid = R.prop(\"appid\", win)\r\n          const key = R.prop(\"viewid\", win)\r\n          const zIndex = R.prop(\"zIndex\", win)\r\n          if (R.equals(appid, fappid)) {\r\n            const window = R.path([\"apps\", appid], windows)\r\n            return <Window \r\n              appid={window.appid}\r\n              title={window.title}\r\n              width={window.width}\r\n              key={key}\r\n              zIndex={zIndex}\r\n              viewid={key}\r\n              index={index}\r\n              minimized={R.prop(\"minimized\", win)}\r\n              url={window.url}\r\n              height={window.height}>{children}</Window>\r\n          }\r\n\r\n        }),\r\n        R.toPairs,\r\n    )(windows.view)\r\n        }\r\n     \r\n    </>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return state\r\n};\r\n\r\n\r\nconst connectAndForwardRef = (\r\n  mapStateToProps = null,\r\n  mapDispatchToProps = null,\r\n  mergeProps = null,\r\n  options = {},\r\n) => component => connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n  mergeProps,\r\n  {\r\n    ...options,\r\n    forwardRef: true,\r\n  },\r\n)(React.forwardRef(component));\r\n\r\nconst ConnectedWindow = connectAndForwardRef(mapStateToProps, null)(StaticWindow)\r\n\r\nexport default ConnectedWindow;\r\n","export const BUILT_IN_APPS = {\r\n    addwebapp: {\r\n        appid: \"addwebapp\",\r\n        title: \"Add New Web App\",\r\n        width: 800,\r\n        height: 600,\r\n        single: true,\r\n        editable: false\r\n    },\r\n\r\n    sender: {\r\n        appid: \"sender\",\r\n        title: \"Sender App\",\r\n        width: 700,\r\n        height: 300,\r\n        deletable: true,\r\n        editable: true\r\n    },\r\n    receiver: {\r\n        appid: \"receiver\",\r\n        title: \"Receiver App\",\r\n        width: 700,\r\n        height: 300,\r\n        deletable: true,\r\n        editable: true\r\n    }\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { uminimizeUpdateIndex, hideWindow, updateIndex, hideWindowId, unminimizeWindow } from '../redux/actions'\r\nimport * as R from 'ramda'\r\nimport {AiOutlineCloseCircle} from 'react-icons/ai'\r\n\r\n\r\n\r\nconst MinBar = ({ children, index, uminimizeUpdateIndex,hideWindowId, unminimizeWindow, className, hideWindow }) => {\r\n\r\n    return (\r\n        <div className={\"noselect min-bar \" + className} onClick={()=> {uminimizeUpdateIndex(index) }}>\r\n            <div className=\"min-bar-close\"> <AiOutlineCloseCircle onClick={e=>{hideWindowId(index); e.stopPropagation();}} size={20}/></div>\r\n            <div className=\"min-bar-title\">{children}</div>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const windows = R.prop(\"windows\", state)\r\n    if(R.isNil(windows)){\r\n        return\r\n    }\r\n    const win_array = R.compose(\r\n        R.values,\r\n        R.map((item) => {return item})\r\n       )(windows)\r\n    \r\n    return R.assocPath([\"windows\", \"apps\"], win_array, state)\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { unminimizeWindow, hideWindowId, uminimizeUpdateIndex, hideWindow, updateIndex }\r\n)(MinBar)","import React, {useEffect, useState } from 'react';\r\nconst Sender = () => {\r\n  const [count, setCount] = useState(0)\r\n  const messageHandler = window.messageHandler\r\n  useEffect(()=>{\r\n   if(messageHandler !== undefined){\r\n      messageHandler.publish(\"count\", count)\r\n   }\r\n  }, [count, messageHandler])\r\n  return (\r\n      <>\r\n      <p>Button has been clicked {count} times!</p>\r\n      <button onClick={()=>{\r\n         setCount(count+1)\r\n      }}>Click me!</button>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default Sender;","import React, {useEffect, useState } from 'react';\r\nconst Receiver = () => {\r\n  const [count, setCount] = useState(0)\r\n  const messageHandler = window.messageHandler\r\n  useEffect(()=>{\r\n    if(messageHandler !== undefined){\r\n        messageHandler.listen(\"count\", (count)=> {\r\n            setCount(f => {return count})\r\n        })\r\n    }\r\n  }, [messageHandler])\r\n  return (\r\n      <>\r\n      <p>Button has been clicked {count} times!</p>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default Receiver;","import React, { useState } from 'react';\r\nimport '../css/App.css';\r\nimport Window from './Window'\r\nimport Header from './Header'\r\nimport * as R from 'ramda'\r\nimport AddWebApp from '../apps/AddWebApp'\r\nimport { connect } from 'react-redux'\r\nimport {loadApps} from '../redux/actions'\r\nimport Settings from './Settings'\r\nimport StaticWindow from './StaticWindow'\r\nimport {BUILT_IN_APPS} from '../constants'\r\nimport MinBar from './MinBar';\r\nimport Sender from '../apps/Sender';\r\nimport Receiver from '../apps/Receiver';\r\n\r\nconst AppManager = ({ windows, loadApps }) => {\r\n  useState(()=>{\r\n    window.messageHandler = {}\r\n    window.messageHandler.publish = (channelName, data) => {\r\n      const event = new Event(channelName, { bubbles: true, cancelable: false })\r\n      event.data = data\r\n      window.dispatchEvent(event)\r\n    }\r\n    window.messageHandler.listen =  (channelName, callback) => {\r\n      window.addEventListener(channelName, (event) => {\r\n        callback(event.data)\r\n      }, false);\r\n    }\r\n    loadApps()\r\n  }, [])\r\n  return (\r\n\r\n    <>\r\n      <Header windows={windows} />\r\n        {/* Add all static windows/apps below */}\r\n        <StaticWindow appid=\"sender\" >\r\n          <Sender />\r\n        </StaticWindow>\r\n        <StaticWindow appid=\"receiver\" >\r\n          <Receiver />\r\n        </StaticWindow>\r\n        <StaticWindow appid=\"addwebapp\" >\r\n          <AddWebApp />\r\n        </StaticWindow>\r\n      \r\n      {\r\n        R.compose(\r\n          R.map(([index, win]) => {\r\n            const appid = R.prop(\"appid\", win)\r\n            const key = R.prop(\"viewid\", win)\r\n            const zIndex = R.prop(\"zIndex\", win)\r\n            if (R.has(appid, BUILT_IN_APPS)) {\r\n              return null\r\n            }\r\n            const window = R.path([\"apps\", appid], windows)\r\n            return  <Window \r\n              appid={window.appid}\r\n              title={window.title}\r\n              url={window.url}\r\n              width={window.width}\r\n              zIndex={zIndex}\r\n              index={index}\r\n              key={key}\r\n              viewid={key}\r\n              minimized={R.prop(\"minimized\", win)}\r\n              height={window.height} />\r\n          }),\r\n          R.toPairs,\r\n        )(windows.view)\r\n      }\r\n      <Settings/>\r\n      <div className=\"footer\">\r\n      {\r\n        \r\n         R.compose(\r\n        \r\n          R.map(([index, win]) => {\r\n              const appid = R.prop(\"appid\", win)\r\n              const viewid = R.prop(\"viewid\", win)\r\n              const window = R.path([\"apps\", appid], windows)\r\n              return <MinBar className={R.propEq(\"minimized\", true, win) ? \"\" : \"showing\"} index={viewid} key={index} appid={appid}>{R.prop(\"title\", window)}</MinBar>\r\n          }),\r\n          R.toPairs,\r\n\r\n        )(windows.view)\r\n      }\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return state\r\n};\r\n\r\nexport default connect(mapStateToProps, {loadApps})(AppManager);\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {\r\n  CREATE_WINDOW,\r\n  SHOW_WINDOW,\r\n  HIDE_WINDOW,\r\n  UPDATE_INDEX,\r\n  MINIMIZE_WINDOW,\r\n  UNMINIMIZE_WINDOW,\r\n  UNMINIMIZE_UPDATE_INDEX,\r\n  HIDE_WINDOW_ID,\r\n  DELETE_WINDOW,\r\n  LOAD_APPS,\r\n  RESET_DEFAULT,\r\n  UPDATE_WINDOW\r\n} from \"../actionTypes\";\r\nimport * as R from 'ramda'\r\nimport { BUILT_IN_APPS } from '../../constants'\r\nlet appView = 0;\r\nlet opened = {}\r\nconst appName = \"waim\"\r\nconst initialState = {\r\n  apps: BUILT_IN_APPS,\r\n  view: []\r\n};\r\n\r\nconst save = (newstate) => {\r\n  const myStorage = window.localStorage;\r\n  myStorage.setItem(appName, JSON.stringify(newstate.apps));\r\n  return newstate\r\n}\r\n\r\nconst load = (newstate) => {\r\n  const myStorage = window.localStorage;\r\n  const apps = myStorage.getItem(appName);\r\n  return R.assoc(\"apps\", R.isNil(apps) ? BUILT_IN_APPS : JSON.parse(apps), newstate)\r\n}\r\n\r\nconst updateIn = R.curry((path, val, obj) => R.compose(\r\n  R.set(R.__, val, obj),\r\n  R.apply(R.compose),\r\n  R.map(R.cond([[R.is(Number), R.lensIndex], [R.T, R.lensProp]]))\r\n)(path));\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SHOW_WINDOW: {\r\n      const { appid } = action.payload\r\n      if (R.pathEq([\"apps\", appid, \"single\"], true, state) && R.propEq(appid, true, opened)) {\r\n        return state\r\n      }\r\n      appView++\r\n      opened[appid] = true\r\n      return R.compose(\r\n        R.assoc(\"view\", R.append({ appid, viewid: appView, zIndex: Number(R.length(R.prop(\"view\", state)) + 1) }, state.view))\r\n      )(state)\r\n    }\r\n\r\n    case HIDE_WINDOW: {\r\n      const { index } = action.payload\r\n\r\n      delete opened[R.path([\"view\", index, \"appid\"], state)]\r\n      const zIndex = R.path([\"view\", Number(index), \"zIndex\"], state)\r\n      const viewid = R.path([\"view\", Number(index), \"viewid\"], state)\r\n      const length = R.length(state.view)\r\n      const instance = R.compose(\r\n        R.map(([index, win]) => {\r\n          const fviewid = R.prop(\"viewid\", win)\r\n          const fzIndex = R.prop(\"zIndex\", win)\r\n          if (R.equals(fviewid, viewid)) {\r\n            return R.assoc(\"zIndex\", Number(length), win)\r\n          }\r\n          else {\r\n            if (Number(fzIndex) > zIndex) {\r\n              return R.assoc(\"zIndex\", Number(fzIndex) - 1, win)\r\n            }\r\n            else {\r\n              return R.assoc(\"zIndex\", fzIndex, win)\r\n            }\r\n          }\r\n        }),\r\n        R.toPairs,\r\n      )(state.view)\r\n      return R.assoc(\"view\", R.remove(index, 1, instance), state)\r\n    }\r\n    case CREATE_WINDOW: {\r\n      const payload = action.payload;\r\n      const window = {\r\n        appid: payload.appid,\r\n        title: R.propOr(\"No Title\", \"title\", payload),\r\n        width: R.propOr(500, \"width\", payload),\r\n        height: R.propOr(500, \"height\", payload),\r\n        url: R.propOr(\"\", \"url\", payload),\r\n        single: R.propOr(false, \"single\", payload),\r\n        deletable: R.propOr(true, \"deletable\", payload),\r\n        editable: R.propOr(true, \"editable\", payload)\r\n      }\r\n      return R.compose(\r\n        save,\r\n        R.assocPath([\"apps\", action.payload.appid], window)\r\n      )(state)\r\n    }\r\n    case UPDATE_INDEX: {\r\n      const { viewid } = action.payload\r\n      const length = R.length(state.view)\r\n      const index = R.findIndex(R.propEq(\"viewid\", viewid))(R.prop(\"view\", state));\r\n      const zIndex = R.path([\"view\", Number(index), \"zIndex\"], state)\r\n      if (R.pathEq([\"view\", Number(index), \"zIndex\"], length, state)) {\r\n        return state\r\n      }\r\n      const instance = R.compose(\r\n        R.map(([index, win]) => {\r\n          const fviewid = R.prop(\"viewid\", win)\r\n          const fzIndex = R.prop(\"zIndex\", win)\r\n          if (R.equals(fviewid, viewid)) {\r\n            return R.assoc(\"zIndex\", Number(length), win)\r\n          }\r\n          else {\r\n            if (Number(fzIndex) > zIndex) {\r\n              return R.assoc(\"zIndex\", Number(fzIndex) - 1, win)\r\n            }\r\n            else {\r\n              return R.assoc(\"zIndex\", fzIndex, win)\r\n            }\r\n          }\r\n        }),\r\n        R.toPairs,\r\n      )(state.view)\r\n      return R.assoc(\"view\", instance, state)\r\n    }\r\n    case MINIMIZE_WINDOW: {\r\n      const { index } = action.payload\r\n      const updateIn = R.curry((path, val, obj) => R.compose(\r\n        R.set(R.__, val, obj),\r\n        R.apply(R.compose),\r\n        R.map(R.cond([[R.is(Number), R.lensIndex], [R.T, R.lensProp]]))\r\n      )(path));\r\n      return updateIn([\"view\", Number(index), \"minimized\"], true, state);\r\n\r\n    }\r\n    case UNMINIMIZE_WINDOW: {\r\n      const { index } = action.payload\r\n      return updateIn([\"view\", Number(index), \"minimized\"], false, state);\r\n\r\n    }\r\n\r\n    case UNMINIMIZE_UPDATE_INDEX: {\r\n      const { viewid } = action.payload\r\n      const length = R.length(state.view)\r\n      const index = R.findIndex(R.propEq(\"viewid\", viewid))(R.prop(\"view\", state));\r\n      const zIndex = R.path([\"view\", Number(index), \"zIndex\"], state)\r\n\r\n\r\n      const min = updateIn([\"view\", Number(index), \"minimized\"], false, state)\r\n      if (R.pathEq([\"view\", Number(index), \"zIndex\"], length, state)) {\r\n        return min\r\n      }\r\n      const instance = R.compose(\r\n        R.map(([index, win]) => {\r\n          const fviewid = R.prop(\"viewid\", win)\r\n          const fzIndex = R.prop(\"zIndex\", win)\r\n          if (R.equals(fviewid, viewid)) {\r\n            return R.assoc(\"zIndex\", Number(length), win)\r\n          }\r\n          else {\r\n            if (Number(fzIndex) > zIndex) {\r\n              return R.assoc(\"zIndex\", Number(fzIndex) - 1, win)\r\n            }\r\n            else {\r\n              return R.assoc(\"zIndex\", fzIndex, win)\r\n            }\r\n          }\r\n        }),\r\n        R.toPairs\r\n      )(min.view)\r\n      return R.assoc(\"view\", instance, state)\r\n    }\r\n\r\n    case HIDE_WINDOW_ID: {\r\n      const { viewid } = action.payload\r\n      const index = R.findIndex(R.propEq(\"viewid\", viewid))(R.prop(\"view\", state));\r\n      delete opened[R.path([\"view\", index, \"appid\"], state)]\r\n      const zIndex = R.path([\"view\", Number(index), \"zIndex\"], state)\r\n      const length = R.length(state.view)\r\n      const instance = R.compose(\r\n        R.map(([index, win]) => {\r\n          const fviewid = R.prop(\"viewid\", win)\r\n          const fzIndex = R.prop(\"zIndex\", win)\r\n          if (R.equals(fviewid, viewid)) {\r\n            return R.assoc(\"zIndex\", Number(length), win)\r\n          }\r\n          else {\r\n            if (Number(fzIndex) > zIndex) {\r\n              return R.assoc(\"zIndex\", Number(fzIndex) - 1, win)\r\n            }\r\n            else {\r\n              return R.assoc(\"zIndex\", fzIndex, win)\r\n            }\r\n          }\r\n        }),\r\n        R.toPairs,\r\n      )(state.view)\r\n      return R.assoc(\"view\", R.remove(index, 1, instance), state)\r\n    }\r\n\r\n\r\n    case UPDATE_WINDOW: {\r\n      const payload = action.payload;\r\n      const window = {\r\n        appid: payload.appid,\r\n        title: R.propOr(\"No Title\", \"title\", payload),\r\n        width: R.propOr(500, \"width\", payload),\r\n        height: R.propOr(500, \"height\", payload),\r\n        url: R.propOr(\"\", \"url\", payload),\r\n        single: R.propOr(false, \"single\", payload),\r\n        deletable: R.propOr(true, \"deletable\", payload),\r\n        editable: R.propOr(true, \"editable\", payload)\r\n      }\r\n      delete opened[payload.appid]\r\n\r\n      const removed = R.compose(\r\n        save,\r\n        R.assocPath([\"apps\", payload.appid], window),\r\n        R.assoc(\"view\", R.filter(view => {\r\n          return !R.propEq(\"appid\", payload.appid, view)\r\n        }, state.view)\r\n        ))(state)\r\n\r\n\r\n      const sorted = R.reverse(R.sortBy(R.prop(\"zIndex\"), removed.view))\r\n      let lengthIndex = sorted.length\r\n      return R.assoc(\"view\", R.compose(\r\n        R.map(([index, win]) => {\r\n          return R.assoc(\"zIndex\", lengthIndex--, win)\r\n        }),\r\n        R.toPairs,\r\n      )(sorted), removed)\r\n\r\n    }\r\n\r\n    case DELETE_WINDOW: {\r\n      const { appid } = action.payload\r\n      const removed = R.compose(\r\n        save,\r\n        R.dissocPath([\"apps\", appid]),\r\n        R.assoc(\"view\", R.filter(view => {\r\n          return !R.propEq(\"appid\", appid, view)\r\n        }, state.view)\r\n        ))(state)\r\n\r\n      const sorted = R.reverse(R.sortBy(R.prop(\"zIndex\"), removed.view))\r\n      let lengthIndex = sorted.length\r\n      return R.assoc(\"view\", R.compose(\r\n        R.map(([index, win]) => {\r\n          return R.assoc(\"zIndex\", lengthIndex--, win)\r\n        }),\r\n        R.toPairs,\r\n      )(sorted), removed)\r\n\r\n    }\r\n    case LOAD_APPS: {\r\n      return load(state)\r\n    }\r\n\r\n    case RESET_DEFAULT: {\r\n      opened = {}\r\n      appView = 0\r\n      return R.compose(\r\n        save,\r\n        R.assoc(\"apps\", BUILT_IN_APPS),\r\n        R.assoc(\"view\", [])\r\n      )(state)\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { TOGGLE_SETTINGS} from \"../actionTypes\";\r\nimport * as R from 'ramda'\r\n\r\nconst initialState = {\r\n    showing: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case TOGGLE_SETTINGS: {\r\n      const {showing} = action.payload\r\n      return R.assoc(\"showing\", showing, state)\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport windows from \"./windows\";\r\nimport settings from \"./settings\"\r\n\r\nexport default combineReducers({ windows, settings });\r\n","import { createStore, compose } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nconst enhancers = compose(\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\nexport default createStore(rootReducer,  enhancers);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport AppManager from './main/AppManager';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render( <Provider store={store}><AppManager /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}